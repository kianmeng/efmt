%% efmt:max_columns=60
-module(max_columns).

-export([long_simple_list/0, long_list_and_tuple/0, long_binary_op/0, long_params/3]).

long_simple_list() ->
    [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100].

long_list_and_tuple() ->
    [1,2,{3,4,5,6,7,8,9,10},11,{12,13,14,15,16,17,18},{19,20,21,22,[23,24,25,26,27,28],29,30,31,32},33,[34,35,{36,37},38,39],40,[41,42,43,44],45,[46,47,48,49,{50,51,52,53},54,55,{56,57,58,59,60,61,62,63,64},65,66]].

long_binary_op() ->
    foo:bar() andalso foo:bar() andalso foo:bar() andalso foo:bar() * foo:bar() andalso (foo:bar() andalso foo:bar() orelse 10 * 20 * 30 == 100) orelse foo:bar().


long_params({A, [B, C, D], E}, {1, 2, 3, 4, 5, 6, 7, 8 ,9, 10, 11, 12, 13, 15, 7924, 32, 23,232, 2232,1,1313}, [Foo, Bar, Baz]) ->
    [1,2,3,4,5,6,7,8,9,10].
